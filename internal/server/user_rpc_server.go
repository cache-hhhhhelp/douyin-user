// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"github.com/cache-hhhhhelp/douyin-user/internal/logic"
	"github.com/cache-hhhhhelp/douyin-user/internal/svc"
	"github.com/cache-hhhhhelp/douyin-user/types/user"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRpcServer) RegisterUser(ctx context.Context, in *user.RegisterOrLoginReq) (*user.DataResp, error) {
	l := logic.NewRegisterUserLogic(ctx, s.svcCtx)
	return l.RegisterUser(in)
}

func (s *UserRpcServer) LoginUser(ctx context.Context, in *user.RegisterOrLoginReq) (*user.DataResp, error) {
	l := logic.NewLoginUserLogic(ctx, s.svcCtx)
	return l.LoginUser(in)
}

func (s *UserRpcServer) GetUser(ctx context.Context, in *user.UserReq) (*user.UserResp, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UserRpcServer) GetManyUser(ctx context.Context, in *user.ManyUserReq) (*user.ManyUserResp, error) {
	l := logic.NewGetManyUserLogic(ctx, s.svcCtx)
	return l.GetManyUser(in)
}

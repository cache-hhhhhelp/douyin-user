type (
	RegisterOrLoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	UserReq {
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}

	DataReply {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}

	UserReply {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		User       User   `json:"user"`
	}

	User {
		Id            int64  `json:"id"`
		Name          string `json:"name"`
		FollowCount   int64  `json:"follow_count"`
		FollowerCount int64  `json:"follower_count"`
		IsFollow      bool   `json:"is_follow"`
	}
)

@server(
	jwt: Auth
)

service user {
	@handler getUser
	get /douyin/user (UserReq) returns (DataReply)
}

service user {
	@handler registerUser
	post /douyin/user/register (RegisterOrLoginReq) returns (DataReply)
	
	@handler loginUser
	post /douyin/user/login (RegisterOrLoginReq) returns (DataReply)
}